name: New Pull request; publish as beta package

on:
  pull_request:
    branches: [ "master" ]

env:
  NPM_REGISTRY_URL: "https://www.npmjs.com/package/hellosign-embedded"
  BETA_SUFFIX: 'testbeta'
  CDN_AWS_PUBLISH_ROLE: arn:aws:iam::654344198836:role/github-actions-oidc-role-nonprod-sign-embedded
  CDN_BUCKET: cdn.staging-hellosign.com
  CDN_PATH: public/js/embedded
  AWS_REGION: us-east-1
jobs:
  build:
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: write # This is required for publishing releases
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x] # we should pull this from a common place

    steps:
      - uses: actions/checkout@v3

      - name: Extract version from package.json
        uses: sergeysova/jq-action@v2
        id: version
        with:
          cmd: 'jq .version package.json -r'

      - name: Check existing releases
        uses: cardinalby/git-get-release-action@v1
        id: released
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag: "v${{ steps.version.outputs.value }}"
          doNotFailIfNotFound: true

      - name: Block if found
        if: "${{ steps.released.outputs.id }}"
        run: |
          echo "v${{ steps.version.outputs.value }} has already been released, update project version in package.json to produce beta package."
          exit 1

      - name: Check beta releases
        uses: cardinalby/git-get-release-action@v1
        id: beta-released
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag: "v${{ steps.version.outputs.value }}-${{ env.BETA_SUFFIX }}"
          doNotFailIfNotFound: true

      - name: Alert if found
        if: "${{ steps.beta-released.outputs.id }}"
        run: |
          echo "v${{ steps.version.outputs.value }}-${{ env.BETA_SUFFIX }} exists and will be overwritten."

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: ${{ env.NPM_REGISTRY_URL }}
          always-auth: true
          token: ${{ secrets.NPM_TOKEN }}

      - name: Build
        run: |
          npm install
          npm run build

      - name: Test
        run: |
          npm test

      - name: Testing Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: "umd/*.js"
          tag: "v${{ steps.version.outputs.value }}-${{ env.BETA_SUFFIX }}"
          allowUpdates: true
          draft: true
          generateReleaseNotes: true
          makeLatest: false
          prerelease: true

      - name: Configure AWS credentials for Non-Prod
        id: awskeys
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.CDN_AWS_PUBLISH_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Copy dev build to nonprod cdn
        run: aws s3 cp umd/embedded.development.js s3://${{ env.CDN_BUCKET }}/${{ env.CDN_PATH }}/v${{ steps.version.outputs.value }}-${{ env.BETA_SUFFIX }}/

      - name: Copy minified build to nonprod cdn
        run: aws s3 cp umd/embedded.production.min.js s3://${{ env.CDN_BUCKET }}/${{ env.CDN_PATH }}/v${{ steps.version.outputs.value }}-${{ env.BETA_SUFFIX }}/
